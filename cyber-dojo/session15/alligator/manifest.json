{"README":"This Cucumber environment is bundled with:\n- PicoContainer DI framework\n- JMock2\n- Mockito\n","Hiker.feature":"\nFeature: full text keyword translate\n\nScenario Outline: user input words\nWhen user input <keywords> with exactly <flag>\nThen the translation output will be <output>\nExamples:\n|keywords| flag  | output  |\n| word   | false |  word*  |\n| *word* | false | *word*  |\n| *wor*d*| false | *wor*d* |\n| ?word? | false | ?word?  | ","HikerStepDef.java":"import org.junit.*;\nimport static org.junit.Assert.*;\nimport cucumber.api.java.en.*;\n\npublic class HikerStepDef {\n\n    private String output;\n\n    @When(\"^user input (\\\\S+) with exactly (\\\\w+)$\")\n    public void userInput(String keywords, boolean flag) throws Throwable {\n        output = FtsTranslator.translate(flag, keywords);\n    }\n\n    @Then(\"^the translation output will be (\\\\S+)$\")\n    public void translationOutputIs(String expected) throws Throwable {\n        assertEquals(expected, output);     \n    }\n}\n","RunCukesTest.java":"import cucumber.api.junit.Cucumber;\nimport cucumber.api.CucumberOptions;\nimport cucumber.api.SnippetType;\nimport org.junit.runner.RunWith;\n\n@RunWith(Cucumber.class)\n@CucumberOptions(strict=true, monochrome=true, format=\"junit:output\", snippets=SnippetType.CAMELCASE)\npublic class RunCukesTest {\n    // this is the adapter/bridge code\n    // between cucumber jvm and junit\n    // you do not need to edit this\n}\n","cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /cucumber/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'`\nfi\n","output":"JUnit version 4.12\n............\n4 Scenarios (4 passed)\n8 Steps (8 passed)\n0m0.208s\n\n\nTime: 0.49\n\nOK (12 tests)\n\n","instructions":"\nThis is an instructor-led exercise.\nThere are no written instructions.\nYour instructor will explain the exercise.\n","FtsTranslator.java":"\npublic class FtsTranslator {\n\n    public static String translate(boolean flag, String keywords) {\n        if (keywords.endsWith(\"*\")) {\n            return keywords;\n        } else if (keywords.endsWith(\"?\")) {\n            return keywords;\n        }\n        return keywords + \"*\";\n    }\n}\n"}