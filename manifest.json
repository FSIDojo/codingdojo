{"HikerTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class HikerTest {\n\n    @Test\n    public void testEmpty() {\n        int expected = 0;\n        int actual = Hiker.answer(\"\");\n        assertEquals(expected, actual);\n    }\n\n     @Test\n    public void testOne() {\n        int expected = 1;\n        int actual = Hiker.answer(\"1\");\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void test2() {\n        int expected = 4;\n        int actual = Hiker.answer(\"1,3\");\n        assertEquals(expected, actual);\n    }\n    \n    @Test\n    public void testSpace() {\n        int expected = 4;\n        int actual = Hiker.answer(\"4\");\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void testUnknownLength() {\n        int expected = 100;\n        int actual = Hikcer.answer(\"10,20,30,40\");\n        assertEquals(expected, actual);\n    }\n}\n","Hiker.java":"\npublic class Hiker {\n\n    public static int answer(String args) {\n        int sum = 0;\n        String[] rs = args.split(\",\");\n        for (int i=0; i< rs.length; i++) {\n            sum = sum + (rs[i].equals(\"\") ? 0 : Integer.parseInt(rs[i]));\n        }\n        return sum;\n    }\n}\n","cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /junit/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  # run test classes even if they are inner classes\n  # remove voluminous stack trace from output\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'` | grep -Ev 'org.junit.runner|org.junit.internal|sun.reflect|org.junit.Assert|java.lang.reflect|org.hamcrest'\nfi\n","output":"HikerTest.java:37: error: cannot find symbol\n        int actual = Hikcer.answer(\"10,20,30,40\");\n                     ^\n  symbol:   variable Hikcer\n  location: class HikerTest\n1 error\n","instructions":"\nThis is an instructor-led exercise.\nThere are no written instructions.\nYour instructor will explain the exercise.\n"}