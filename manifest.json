{"HikerTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class HikerTest {\n\n    @Test\n    public void testEmpty() {\n        int expected = 0;\n        int actual = Hiker.answer(\"\");\n        assertEquals(expected, actual);\n    }\n\n     @Test\n    public void testOne() {\n        int expected = 1;\n        int actual = Hiker.answer(\"1\");\n        assertEquals(expected, actual);\n    }\n}\n","Hiker.java":"\npublic class Hiker {\n\n    public static int answer(String... args) {\n        return 0;\n    }\n}\n","cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /junit/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  # run test classes even if they are inner classes\n  # remove voluminous stack trace from output\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'` | grep -Ev 'org.junit.runner|org.junit.internal|sun.reflect|org.junit.Assert|java.lang.reflect|org.hamcrest'\nfi\n","output":"JUnit version 4.11-SNAPSHOT-20120416-1530\n.E.\nTime: 0.015\nThere was 1 failure:\n1) testOne(HikerTest)\njava.lang.AssertionError: expected:<1> but was:<0>\n\tat HikerTest.testOne(HikerTest.java:17)\n\nFAILURES!!!\nTests run: 2,  Failures: 1\n","instructions":"\nThis is an instructor-led exercise.\nThere are no written instructions.\nYour instructor will explain the exercise.\n"}