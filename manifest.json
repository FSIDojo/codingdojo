{"cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /junit/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  # run test classes even if they are inner classes\n  # remove voluminous stack trace from output\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'` | grep -Ev 'org.junit.runner|org.junit.internal|sun.reflect|org.junit.Assert|java.lang.reflect|org.hamcrest'\nfi\n","output":"JUnit version 4.11-SNAPSHOT-20120416-1530\n...\nTime: 0.016\n\nOK (3 tests)\n","instructions":"\nThis is an instructor-led exercise.\nThere are no written instructions.\nYour instructor will explain the exercise.\n","StringCalculatorTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class StringCalculatorTest {\n\n    @Test\n    public void should_return_zero_from_empty() {\n        assertEquals(0, StringCalculator.add(\"\"));\n    }\n\n    @Test\n    public void should_return_intvalue_from_single_string() {\n        assertEquals(2, StringCalculator.add(\"2\"));\n    }\n\n    @Test\n    public void should_return_sum_from_two_string() {\n        assertEquals(3, StringCalculator.add(\"1,2\"));\n    }\n\n}","StringCalculator.java":"\npublic class StringCalculator {\n\n    public static int add(String input) {\n        return input.equals(\"\") ?0 : splict_comma(input);\n    }\n    \n    private static int splict_comma(String input){\n        String[] parts = input.split(\",\");\n        if(parts.length > 1){\n            return Integer.valueOf(parts[0]) + Integer.valueOf(parts[1]);\n        }\n        return Integer.valueOf(parts[0]);\n    }\n}\n"}