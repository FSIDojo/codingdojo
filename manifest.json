{"Hiker.java":"\npublic class Hiker {\n\n    public static int answer(String arg) {\n        return 6 * 9;\n    }\n}\n","cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /junit/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  # run test classes even if they are inner classes\n  # remove voluminous stack trace from output\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'` | grep -Ev 'org.junit.runner|org.junit.internal|sun.reflect|org.junit.Assert|java.lang.reflect|org.hamcrest'\nfi\n","output":"StringCalculatorTest.java:8: error: cannot find symbol\n        StringCalculator caculator = new StringCalculator();\n        ^\n  symbol:   class StringCalculator\n  location: class StringCalculatorTest\nStringCalculatorTest.java:8: error: cannot find symbol\n        StringCalculator caculator = new StringCalculator();\n                                         ^\n  symbol:   class StringCalculator\n  location: class StringCalculatorTest\n2 errors\n","instructions":"\nThis is an instructor-led exercise.\nThere are no written instructions.\nYour instructor will explain the exercise.\n","StringCalculatorTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class StringCalculatorTest {\n\n    @Test\n    public void zero_from_empty() {\n        StringCalculator caculator = new StringCalculator();\n        int expected = 0;\n        int actual = caculator.Add(\"\");\n        assertEquals(expected, actual);\n    }\n}\n"}