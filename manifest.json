{"cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /junit/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  # run test classes even if they are inner classes\n  # remove voluminous stack trace from output\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'` | grep -Ev 'org.junit.runner|org.junit.internal|sun.reflect|org.junit.Assert|java.lang.reflect|org.hamcrest'\nfi\n","output":"JUnit version 4.11-SNAPSHOT-20120416-1530\n....\nTime: 0.015\n\nOK (4 tests)\n","instructions":"\nThis is an instructor-led exercise.\nThere are no written instructions.\nYour instructor will explain the exercise.\n","StringCalculator.java":"\npublic class StringCalculator {\n\n    public static int add(String input) {\n       if(input == null || input.length() == 0){ \n           return 0;\n       }\n       String[] splittedInput = input.split(\",\");\n       return addArgs(splittedInput);\n    }\n\n    public static int addArgs(String... number){\n        int result = 0; \n        for(String temp : number){\n           result += Integer.valueOf(temp);\n       }\n       return result;\n    }\n}\n","StringCalculatorTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class StringCalculatorTest {\n\n    @Test\n    public void addWithNull() {\n        String input = null;\n        int expected = 0;\n        int actual = StringCalculator.add(input);\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void addWithEmpty() {\n        String input = \"\";\n        int expected = 0;\n        int actual = StringCalculator.add(input);\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void addWithOneInput() {\n        String input = \"1\";\n        int expected = 1;\n        int actual = StringCalculator.add(input);\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void addWithTowInput() {\n        String input = \"1,2\";\n        int expected = 3;\n        int actual = StringCalculator.add(input);\n        assertEquals(expected, actual);\n    }\n}\n"}